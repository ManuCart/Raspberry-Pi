

 #        ##   #    #  ####  #    #   ##    ####  ######
 #       #  #  ##   # #    # #    #  #  #  #    # #
 #      #    # # #  # #      #    # #    # #      #####
 #      ###### #  # # #  ### #    # ###### #  ### #
 #      #    # #   ## #    # #    # #    # #    # #
 ###### #    # #    #  ####   ####  #    #  ####  ######

+ f install
Install node.js
  # https://nodejs.org
  wget https://nodejs.org/dist/v8.3.0/node-v8.3.0-linux-armv6l.tar.gz
  sudo tar -xvf node-v8.3.0-linux-armv6l.tar.gz --strip 1 -C /usr/local
  rm node-v8.3.0-linux-armv6l.tar.gz

+ f install
Install go lang
  # https://golang.org/dl
  wget https://storage.googleapis.com/golang/go1.8.1.linux-armv6l.tar.gz
  sudo tar -xvf go1.8.1.linux-armv6l.tar.gz -C /usr/local
  rm go1.8.1.linux-armv6l.tar.gz
  sudo mkdir /opt/go
  sudo chown -R pi:pi /opt/go
  cat << '!' >> ~/.bashrc
  export GOROOT=/usr/local/go
  export GOPATH=/opt/go
  export PATH="$PATH:$GOROOT/bin:$GOPATH/bin"
  source ~/.bashrc

+ f install
Install python
  sudo apt-get install python-pip python-dev
  sudo pip install --upgrade pip

+ f install
Install python3
  sudo apt-get -y install python3-pip
  sudo pip3 install --upgrade pip3


 # #    #  ####  #####   ##   #      #
 # ##   # #        #    #  #  #      #
 # # #  #  ####    #   #    # #      #
 # #  # #      #   #   ###### #      #
 # #   ## #    #   #   #    # #      #
 # #    #  ####    #   #    # ###### ######

+ f install
Install tmux
  # https://github.com/tmux/tmux
  sudo apt-get install libevent-dev libncurses5-dev
  wget https://github.com/tmux/tmux/releases/download/2.6/tmux-2.6.tar.gz
  tar xvfz tmux-2.6.tar.gz
  cd tmux-2.6
  ./configure && make
  sudo mv ./tmux /usr/local/bin/tmux
  cd ..
  rm tmux-2.6.tar.gz
  rm -rf tmux-2.6

+ f install
Install mc
  # https://github.com/MidnightCommander/mc
  sudo apt-gen install autogen autoconf libtool gettext libslang2-dev
  wget https://github.com/MidnightCommander/mc/archive/4.8.20.tar.gz
  tar xvfz 4.8.20.tar.gz
  cd mc-4.8.20
  autoconf
  ./configure
  make
  make install

+ f install
Install git
  # https://github.com/ManuCart/Raspberry-Pi
  sudo apt-get install git
  git clone git@github.com:ManuCart/Raspberry-Pi.git ~/rpi
  cd rpi
  ssh-keygen -t rsa -b 4096 -C "Raspberry Pi" -f $HOME/.ssh/github
  # Copy contents github.pub to github.com
  eval $(ssh-agent -s)
  ssh-add ~/.ssh/github
  ssh -vT git@github.com

+ f install
Install castnow
  # https://github.com/xat/castnow
  sudo npm install castnow -g

+ f install
Install Dropbox-Uploader
  # https://github.com/andreafabrizi/Dropbox-Uploader
  sudo curl -o /usr/local/bin/dropbox_uploader \
  https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh
  sudo chmod +x /usr/local/bin/dropbox_uploader
  dropbox_uploader init

+ f install
Install drive
  # https://github.com/odeke-em/drive
  go get -u github.com/odeke-em/drive/cmd/drive
  mkdir /media/hdd/Drive
  drive init /media/hdd/Drive
  sudo mkdir /opt/gd
  sudo chown -R pi:pi /opt/gd
  drive init /opt/gd

+ f install
Install flickr-download
  #https://github.com/beaufour/flickr-download
  sudo pip install flickr_api
  cd ~/.bin
  git clone https://github.com/beaufour/flickr-download.git
  ~/.bin/flickr-download/flickr_download/flickr_download.py -t 

+ f install
Install flickr-uploader
  # https://github.com/trickortweak/flickr-uploader
  sudo apt-get remove elinks links links2 lynx w3m
  sudo mkdir /opt
  sudo chown -R pi:pi /opt
  cd /opt
  git clone https://github.com/trickortweak/flickr-uploader.git
  chmod +x flickr-uploader/uploadr.py
  mcedit -x flickr-uploader/uploadr.ini
  > FILES_DIR = "/media/hdd/photos"
  > "api_key" : "********************************",
  > "secret"  : "****************"
  mv flickr-uploader/ flickr-uploader#1/
  cd /opt
  /opt/flickr-uploader#1/uploadr.py

+ f install
Install gmusicapi-scripts
  # https://github.com/thebigmunch/gmusicapi-scripts
  sudo pip3 install gmusicapi-scripts
  # gmsync /media/hdd/music
  # gmsync down "/media/hdd/listen/%album%/%title%"
  # gmsync -c ~/.local/share/gmusicapi/oauth.2.cred /media/hdd/music

+ f install
Install hue-cli
  # https://github.com/bahamas10/hue-cli
  sudo npm install -g hue-cli
  hue search
  hue -H 192.168.0.10 register

+ f install
Install ifttt maker channel
  # https://ifttt.com/maker
  # echo "{key}" > ~/.maker_channel_key
  # curl -X POST https://maker.ifttt.com/trigger/Raspberry_Pi/with/key/`cat ~/.maker_channel_key`
  # curl -X POST -H "Content-Type: application/json" -d '{"value1":"1","value2":"2","value3":"3"}'
  #https://maker.ifttt.com/trigger/Raspberry_Pi/with/key/`cat ~/.maker_channel_key`

+ f install
Install iphone
  # https://github.com/libimobiledevice
  # https://gist.github.com/kfatehi/8922430
  sudo apt-get -y install git build-essential libxml2-dev python2.7 python2.7-dev fuse libtool autoconf libusb-1.0-0-dev libfuse-dev
  mkdir iphone_libs && cd iphone_libs
  git clone https://github.com/libimobiledevice/libplist.git
  git clone https://github.com/libimobiledevice/libusbmuxd.git
  git clone https://github.com/libimobiledevice/usbmuxd.git
  git clone https://github.com/libimobiledevice/libimobiledevice.git
  git clone https://github.com/libimobiledevice/ifuse.git
  export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
  echo "export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" | sudo tee -a /etc/bash.bashrc
  cd libplist && ./autogen.sh && make && sudo make install && cd ..
  cd libusbmuxd && ./autogen.sh && make && sudo make install && cd ..
  cd libimobiledevice && ./autogen.sh && make && sudo make install && cd ..
  cd usbmuxd && ./autogen.sh && make && sudo make install && cd ..
  cd ifuse && ./autogen.sh && make && sudo make install && cd ..
  groupadd -g 140 usbmux &>/dev/null
  useradd -c 'usbmux user' -u 140 -g usbmux -d / -s /sbin/nologin usbmux &>/dev/null
  passwd -l usbmux &>/dev/null
  echo /usr/local/lib | sudo tee /etc/ld.so.conf.d/libimobiledevice-libs.conf
  sudo ldconfig

+ f install
Install motion
  # http://www.lavrsen.dk/foswiki/bin/view/Motion/WebHome
  echo 'disable_camera_led=1' | sudo tee -a /boot/config.txt
  sudo modprobe bcm2835-v4l2
  echo 'bcm2835-v4l2' | sudo tee -a /etc/modules
  sudo apt-get -y install motion
  sudo chmod 664 /etc/motion/motion.conf
  mkdir /tmp/motion
  echo 'start_motion_daemon=no' | sudo tee /etc/default/motion
  sudo mcedit /etc/motion/motion.conf
  > daemon off
  > process_id_file /var/run/motion/motion.pid
  > ffmpeg_output_movies off
  > rotate 270
  > width 1280
  > height 960
  > threshold 3000
  > webcam_localhost off
  > target_dir /media/hdd/motion
  > control_localhost off
  > on_event_start /usr/local/bin/pushbullet push all note "%d/%m/%Y %H:%M:%S motion detected"
  > on_picture_save /usr/local/bin/dropbox_uploader upload %f /motion/%d-%m-%Y/%H-%M-%S.jpg
  sudo mkdir /var/run/motion
  sudo chmod 777 /var/run/motion

+ f install
Install samba
  sudo apt-get -y install samba samba-common-bin
  cat << EOF | sudo tee -a /etc/samba/smb.conf
  [HDD]
  comment = Raspberry Pi Hard Drive
  path = /media/hdd
  valid users = @users
  force group = users
  create mask = 0660
  directory mask = 0771
  read only = no
  EOF
  sudo service smbd restart
  sudo smbpasswd -a pi

+ f install
Install sejda
  # https://github.com/torakiki/sejda
  sudo apt-get -y install oracle-java8-jdk
  curl -L -o sejda.zip https://github.com/torakiki/sejda/releases/download/v3.0.18/sejda-console-3.0.18-bin.zip
  unzip sejda.zip
  sudo mkdir /opt/sejda
  sudo chown -R pi:pi /opt/sejda
  mv sejda-console-3.0.18/* /opt/sejda/
  rm -rf sejda.zip sejda-console-3.0.18
  chmod +x /opt/sejda/bin/sejda-console

+ f install
Install sharp-cli
  # https://github.com/vseventer/sharp-cli
  sudo npm install --unsafe-perm sharp -g sharp-cli
  curl https://transfer.sh/XXXXX/20##.####.JPEG -o IMG.JPG
  sharp -i IMG.JPG -o IMG.OUT.JPG resize 11900 8400 --withoutEnlargement
  curl -H "Max-Downloads: 1" -H "Max-Days: 1" --upload-file ./IMG.OUT.JPG https://transfer.sh/IMG.OUT.JPG && echo

+ f install
Install squid
  # http://www.squid-cache.org/
  sudo apt-get install squid

+ f install
Install ssh
  mkdir ~/.ssh
  cd ~/.ssh
  ssh-keygen -t rsa -b 4096 -N '' -C pi@raspberry
  mv id_rsa.pub authorized_keys
  sudo chmod 600 authorized_keys
  cat << EOF | sudo tee -a /etc/ssh/sshd_config
  PermitRootLogin no
  AuthorizedKeysFile /home/pi/.ssh/authorized_keys
  PasswordAuthentication no
  Match Address 127.0.0.1,192.168.0.0/24
  PasswordAuthentication yes
  EOF
  sudo service ssh restart

+ f install
Install transmission
  # http://www.transmissionbt.com/
  sudo apt-get -y install transmission-daemon
  mkdir /media/hdd/torrents
  sudo usermod -a -G debian-transmission pi
  sudo chgrp debian-transmission /media/hdd/torrents
  sudo chmod 777 -R /media/hdd/torrents
  sudo mcedit /etc/default/transmission-daemon
   >>> ENABLE_DAEMON=0
  sudo service transmission-daemon stop
  sudo sed -ie '$d' /etc/transmission-daemon/settings.json
  cat << EOF | sudo tee -a /etc/transmission-daemon/settings.json
  ,
  "download-dir": "/media/hdd/torrents" ,
  "incomplete-dir": "/media/hdd/torrents" ,
  "rpc-authentication-required": false ,
  "rpc-whitelist": "127.0.0.1,192.168.0.*" ,
  "speed-limit-down": 500 ,
  "speed-limit-down-enable": true ,
  "speed-limit-up": 10 ,
  "speed-limit-up-enable": true ,
  "start-added-torrents": true,
  "trash-original-torrent-files": true,
  "umask": 0 ,
  "watch-dir-enabled": true ,
  "watch-dir": "/tmp"
  }
  EOF
  sudo service transmission-daemon restart

+ f install
Install upload-gphotos
  # https://github.com/3846masa/upload-gphotos
  sudo npm i -g npm
  sudo npm install -g upload-gphotos

+ f install
Install vbox
  apt-get install sshfs gpm mc
  apt-get install gcc make perl linux-headers-$(uname -r)
  mkdir --p /media/cdrom
  mount -t auto /dev/cdrom /media/cdrom/
  cd /media/cdrom/
  sh VBoxLinuxAdditions.run

+ f install
Install youtube-dl
  # https://github.com/rg3/youtube-dl
  sudo curl -L https://yt-dl.org/latest/youtube-dl -o /usr/local/bin/youtube-dl
  sudo chmod a+rx /usr/local/bin/youtube-dl
  echo "<youtube-dl Playlist Link>" > ~/.youtube-dl
  mkdir /medi/hdd/youtube-dl
  youtube-dl --output "/media/hdd/youtube-dl/%(title)s.%(ext)s" https://www.youtube.com/playlist?list=`cat ~/.youtube-dl`

+ f install
Install youtube-upload
  # https://github.com/tokland/youtube-upload
  sudo pip install --upgrade google-api-python-client progressbar2
  wget https://github.com/tokland/youtube-upload/archive/master.zip
  unzip master.zip
  cd youtube-upload-master
  sudo python setup.py install
  rm ~/.youtube-upload-credentials.json
  dropbox_uploader download samplevideo.mp4
  youtube-upload --title="test" --category="Music" --privacy="private" samplevideo.mp4
  cd ..
  rm samplevideo.mp4 master.zip
  sudo rm -rf youtube-upload-master
